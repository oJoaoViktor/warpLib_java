/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package VIEW;

import DAO.ClienteDAO;
import DTO.ClienteDTO;
import java.util.ArrayList;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import UTILS.validations;
import UTILS.utils;

public class formClienteVIEW extends javax.swing.JFrame {

    public formClienteVIEW() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        listarClientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_cadastro = new javax.swing.JPanel();
        lbl_tituloCadastro = new javax.swing.JLabel();
        lbl_nomeCompleto = new javax.swing.JLabel();
        txt_nomeUsuario = new javax.swing.JTextField();
        lbl_emailUsuario = new javax.swing.JLabel();
        txt_emailUsuario = new javax.swing.JTextField();
        lbl_cpfUsuario = new javax.swing.JLabel();
        txt_cpfUsuario = new javax.swing.JFormattedTextField();
        btn_cadastrarCliente = new javax.swing.JButton();
        pnl_gerenciamentoCliente = new javax.swing.JPanel();
        lbl_tituloGerenciamento = new javax.swing.JLabel();
        lbl_selecioneCliente = new javax.swing.JLabel();
        btn_editar = new javax.swing.JButton();
        cbox_clientList = new javax.swing.JComboBox<>();
        btn_excluir = new javax.swing.JButton();
        btn_voltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnl_cadastro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnl_cadastro.setPreferredSize(new java.awt.Dimension(400, 400));

        lbl_tituloCadastro.setText("CADASTRO");

        lbl_nomeCompleto.setText("Nome completo:");

        lbl_emailUsuario.setText("E-mail:");

        lbl_cpfUsuario.setText("CPF:");

        try {
            txt_cpfUsuario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btn_cadastrarCliente.setText("Cadastrar cliente");
        btn_cadastrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cadastrarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_cadastroLayout = new javax.swing.GroupLayout(pnl_cadastro);
        pnl_cadastro.setLayout(pnl_cadastroLayout);
        pnl_cadastroLayout.setHorizontalGroup(
            pnl_cadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_cadastroLayout.createSequentialGroup()
                .addGroup(pnl_cadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_cadastroLayout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(lbl_tituloCadastro))
                    .addGroup(pnl_cadastroLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(pnl_cadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_nomeCompleto)
                            .addComponent(txt_nomeUsuario)
                            .addComponent(txt_emailUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                            .addComponent(lbl_emailUsuario)
                            .addComponent(lbl_cpfUsuario)
                            .addComponent(btn_cadastrarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_cpfUsuario))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        pnl_cadastroLayout.setVerticalGroup(
            pnl_cadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_cadastroLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(lbl_tituloCadastro)
                .addGap(42, 42, 42)
                .addComponent(lbl_nomeCompleto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_nomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_emailUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_emailUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_cpfUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_cpfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btn_cadastrarCliente)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        getContentPane().add(pnl_cadastro, java.awt.BorderLayout.LINE_START);

        pnl_gerenciamentoCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbl_tituloGerenciamento.setText("GERENCIAMENTO DE CLIENTES");

        lbl_selecioneCliente.setText("Selecione o cliente:");

        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_excluir.setText("Excluir");
        btn_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirActionPerformed(evt);
            }
        });

        btn_voltar.setText("Voltar");
        btn_voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_voltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_gerenciamentoClienteLayout = new javax.swing.GroupLayout(pnl_gerenciamentoCliente);
        pnl_gerenciamentoCliente.setLayout(pnl_gerenciamentoClienteLayout);
        pnl_gerenciamentoClienteLayout.setHorizontalGroup(
            pnl_gerenciamentoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_gerenciamentoClienteLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(pnl_gerenciamentoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_selecioneCliente)
                    .addGroup(pnl_gerenciamentoClienteLayout.createSequentialGroup()
                        .addComponent(btn_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbox_clientList, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_gerenciamentoClienteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl_gerenciamentoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_gerenciamentoClienteLayout.createSequentialGroup()
                        .addComponent(lbl_tituloGerenciamento)
                        .addGap(116, 116, 116))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_gerenciamentoClienteLayout.createSequentialGroup()
                        .addComponent(btn_voltar)
                        .addContainerGap())))
        );
        pnl_gerenciamentoClienteLayout.setVerticalGroup(
            pnl_gerenciamentoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_gerenciamentoClienteLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(lbl_tituloGerenciamento)
                .addGap(42, 42, 42)
                .addComponent(lbl_selecioneCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbox_clientList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_gerenciamentoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_editar)
                    .addComponent(btn_excluir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 205, Short.MAX_VALUE)
                .addComponent(btn_voltar)
                .addContainerGap())
        );

        getContentPane().add(pnl_gerenciamentoCliente, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cadastrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cadastrarClienteActionPerformed
        cadastrarCliente();
        listarClientes();
    }//GEN-LAST:event_btn_cadastrarClienteActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        openEditScreen(collectMatricula());
        listarClientes();
    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirActionPerformed
        excludeCliente();
        listarClientes();
    }//GEN-LAST:event_btn_excluirActionPerformed

    private void btn_voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_voltarActionPerformed
        callHomeScreen();
    }//GEN-LAST:event_btn_voltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formClienteVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formClienteVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formClienteVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formClienteVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formClienteVIEW().setVisible(true);
            }
        });
    }

    private void cadastrarCliente() {
        try {
            String nome, email, cpf; //Iniciando variável
            int matricula; //Iniciando variável
            nome = txt_nomeUsuario.getText().trim(); // Coleta o texto no respectivo campo
            email = txt_emailUsuario.getText().trim(); // Coleta o texto no respectivo campo
            cpf = txt_cpfUsuario.getText().trim(); // Coleta o texto no respectivo campo
            ClienteDTO cliente = validations.alreadyExistsCpf(cpf); // Verifica  se o CPF já existe no banco de dados

            if (nome.isEmpty() || email.isEmpty()) { // Verifica se os campos de nome ou e-mail estão vazios
                JOptionPane.showMessageDialog(this, "Não podem haver campos vazios.", "Erro", JOptionPane.ERROR_MESSAGE);
                return; //Retorna vazio para os campos continuarem preenchidos para o usuário corrigir.
            }
            if (!validations.isValidEmail(email)) { //Verifica se o e-mail é válido
                JOptionPane.showMessageDialog(this, "Insira um e-mail válido.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (!validations.isValidCpf(cpf)) { //Verifica se o CPF é válido
                JOptionPane.showMessageDialog(this, "Insira um CPF válido.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (cliente != null) { // Verifica se anteriormente foi coletado algum cliente existente
                JOptionPane.showMessageDialog(this, "Já existe um cliente cadastrado com este CPF.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
            matricula = utils.generateRandomNumber(); //Gera uma matrícula aleatória para o cliente
            ClienteDTO objClienteDTO = new ClienteDTO(); //Instância o objeto de transferência
            objClienteDTO.setMatricula(matricula); //Define a matrícula do cliente
            objClienteDTO.setNome(nome); //Define o nome do cliente
            objClienteDTO.setEmail(email); //Define o e-mail do cliente
            objClienteDTO.setCpf(cpf); //Define o CPF do cliente
            ClienteDAO objClienteDAO = new ClienteDAO(); //Instância o objeto de acesso ao BD
            objClienteDAO.cadastrarCliente(objClienteDTO); //Chama o método de cadastro do cliente
            clearFields(); //Limpa os campos
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "formClienteVIEW - cadastrarCliente():\n" + erro);
        }
    }

    private void callHomeScreen() {
        formHomeVIEW homeScreen = new formHomeVIEW();
        dispose();
        homeScreen.setVisible(true);
    }

    private void clearFields() {
        txt_nomeUsuario.setText("");
        txt_emailUsuario.setText("");
        txt_cpfUsuario.setText("");
    }

    private int collectMatricula() {
        int matricula = 0;
        try {
            String selectedItem = (String) cbox_clientList.getSelectedItem();
            if (selectedItem != null) {
                String[] parts = selectedItem.split(" - ");
                matricula = Integer.parseInt(parts[0]);
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "collectMatricula()" + erro);
        }
        return matricula;
    }

    private void excludeCliente() {
        int id_cliente;
        ClienteDAO objClienteDAO = new ClienteDAO();
        ClienteDTO objClienteDTO = objClienteDAO.pesquisarClienteMatricula(collectMatricula());
        id_cliente = objClienteDTO.getId_cliente();
        objClienteDAO.excludeCliente(objClienteDTO);
    }

    private void listarClientes() {
        try {
            ClienteDAO objClienteDAO = new ClienteDAO();
            this.cbox_clientList.removeAllItems();
            ArrayList<ClienteDTO> clientList = objClienteDAO.pesquisarCliente();
            for (ClienteDTO cliente : clientList) {
                String item = cliente.getMatricula() + " - " + cliente.getNome();
                this.cbox_clientList.addItem(item);
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "listarClientes(): " + erro);
        }
    }

    private void openEditScreen(int matricula) {
        try {
            ClienteDAO objClienteDAO = new ClienteDAO();
            ClienteDTO objClienteDTO = objClienteDAO.pesquisarClienteMatricula(matricula);
            JDialog dialog = new JDialog();
            if (objClienteDTO != null) {
                formEditClienteVIEW editScreen = new formEditClienteVIEW(dialog, rootPaneCheckingEnabled, objClienteDTO);
                editScreen.setVisible(true);
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Houve um erro ao abrir a tela de edição de cliente: " + erro);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cadastrarCliente;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_excluir;
    private javax.swing.JButton btn_voltar;
    private javax.swing.JComboBox<String> cbox_clientList;
    private javax.swing.JLabel lbl_cpfUsuario;
    private javax.swing.JLabel lbl_emailUsuario;
    private javax.swing.JLabel lbl_nomeCompleto;
    private javax.swing.JLabel lbl_selecioneCliente;
    private javax.swing.JLabel lbl_tituloCadastro;
    private javax.swing.JLabel lbl_tituloGerenciamento;
    private javax.swing.JPanel pnl_cadastro;
    private javax.swing.JPanel pnl_gerenciamentoCliente;
    private javax.swing.JFormattedTextField txt_cpfUsuario;
    private javax.swing.JTextField txt_emailUsuario;
    private javax.swing.JTextField txt_nomeUsuario;
    // End of variables declaration//GEN-END:variables
}
